@mixin tlbr($class-name, $property, $value) {
	@each $name, $direction in (
		't': 'top',
		'l': 'left',
		'b': 'bottom',
		'r': 'right'
	) { .#{$class-name}#{$name}#{$value} { #{$property}-#{$direction}: #{$value}; } }
}

@mixin flex { display: flex; }

@mixin flex-row {
	@include flex;
	flex-direction: row;
}

@mixin flex-column {
	@include flex;
	flex-direction: column;
}

@mixin link-hover {
	background: white;
	color: $accentcolour;
}

@include tlbr(mg, margin, 0);
@include tlbr(mg, margin, 1rem);
@include tlbr(mg, margin, 2rem);

.cover { object-fit: cover; }
.mg0auto { margin: 0 auto; }

.g1 { grid-column: 1; }
.g2 { grid-column: 2; }
.g3 { grid-column: 3; }

.g1-3 { grid-column: 1 / span 3; }
.g2-3 { grid-column: 2 / span 3; }

.span2 { grid-column: span 2; }
.span3 { grid-column: span 3; }
.gap1 { gap: 2rem; }
.gap2 { gap: 2rem; }

.flex-row { @include flex-row; }
.flex-column { @include flex-column; }
.flex-wrap { flex-wrap: wrap; }
.flex-same-size > * { flex-basis: 100%; }
.align-start { align-items: flex-start; }

.grid2 {
	display: grid;
	gap: 1rem;
	grid-template-columns: repeat(2, 1fr);
}

.grid3 {
	display: grid;
	gap: 1rem;
	grid-template-columns: repeat(3, 1fr);
}

.flex-row2 {
	@include flex-row;
	& > * { max-width: 50%; }
}

.flex-centre {
	align-items: center;
	justify-content: center;
}

.text-hr {
	border: 2px solid $accentcolour;
	width: 80%;
	border-radius: 50%;
	padding: 0 2rem;
}

.image-centred {
	max-width: 50%;
	margin: 1rem auto;
}

.image-centred-caption {
	margin-bottom: 2rem;
	text-align: center;
}

.float-left {
	float: left;
	margin-right: 1rem;
}